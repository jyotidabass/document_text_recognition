name: builds

on:
  push:
    branches: main
  pull_request:
    branches: main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python: [3.7, 3.8]
        framework: [tensorflow, pytorch]
    steps:
      - uses: actions/checkout@v2
      - if: matrix.os == 'macos-latest'
        name: Install MacOS prerequisites
        run: brew install cairo pango gdk-pixbuf libffi
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
          architecture: x64
      - if: matrix.framework == 'tensorflow'
        name: Cache python modules (TF)
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pkg-deps-${{ matrix.python }}-${{ hashFiles('requirements.txt') }}
      - if: matrix.framework == 'pytorch'
        name: Cache python modules (PT)
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pkg-deps-${{ matrix.python }}-${{ hashFiles('requirements-pt.txt') }}
      - if: matrix.framework == 'tensorflow'
        name: Install package (TF)
        run: |
          python -m pip install --upgrade pip
          pip install -e .[tf] --upgrade
      - if: matrix.framework == 'pytorch'
        name: Install package (PT)
        run: |
          python -m pip install --upgrade pip
          pip install -e .[torch] --upgrade
      - name: Import package
        run: python -c "import doctr; print(doctr.__version__)"
